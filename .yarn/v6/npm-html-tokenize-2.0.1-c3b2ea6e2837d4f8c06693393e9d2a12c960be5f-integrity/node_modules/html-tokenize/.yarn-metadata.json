{
  "manifest": {
    "name": "html-tokenize",
    "version": "2.0.1",
    "description": "transform stream to tokenize html",
    "main": "index.js",
    "bin": {
      "html-tokenize": "bin/cmd.js"
    },
    "dependencies": {
      "buffer-from": "~0.1.1",
      "inherits": "~2.0.1",
      "minimist": "~1.2.5",
      "readable-stream": "~1.0.27-1",
      "through2": "~0.4.1"
    },
    "devDependencies": {
      "tape": "~2.12.1"
    },
    "scripts": {
      "test": "tape test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/substack/html-tokenize.git"
    },
    "homepage": "https://github.com/substack/html-tokenize",
    "keywords": [
      "html",
      "parser",
      "tokenize",
      "stream"
    ],
    "author": {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "http://substack.net"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/runner/work/docker-config-generator/docker-config-generator/.yarn/v6/npm-html-tokenize-2.0.1-c3b2ea6e2837d4f8c06693393e9d2a12c960be5f-integrity/node_modules/html-tokenize/package.json",
    "readmeFilename": "readme.markdown",
    "readme": "# html-tokenize\n\ntransform stream to tokenize html\n\n[![build status](https://secure.travis-ci.org/substack/html-tokenize.png)](http://travis-ci.org/substack/html-tokenize)\n\n# example\n\n``` js\nvar fs = require('fs');\nvar tokenize = require('html-tokenize');\nvar through = require('through2');\n\nfs.createReadStream(__dirname + '/table.html')\n    .pipe(tokenize())\n    .pipe(through.obj(function (row, enc, next) {\n        row[1] = row[1].toString();\n        console.log(row);\n        next();\n    }))\n;\n```\n\nthis html:\n\n``` html\n<table>\n  <tbody>blah blah blah</tbody>\n  <tr><td>there</td></tr>\n  <tr><td>it</td></tr>\n  <tr><td>is</td></tr>\n</table>\n```\n\ngenerates this output:\n\n```\n[ 'open', '<table>' ]\n[ 'text', '\\n  ' ]\n[ 'open', '<tbody>' ]\n[ 'text', 'blah blah blah' ]\n[ 'close', '</tbody>' ]\n[ 'text', '\\n  ' ]\n[ 'open', '<tr>' ]\n[ 'open', '<td>' ]\n[ 'text', 'there' ]\n[ 'close', '</td>' ]\n[ 'close', '</tr>' ]\n[ 'text', '\\n  ' ]\n[ 'open', '<tr>' ]\n[ 'open', '<td>' ]\n[ 'text', 'it' ]\n[ 'close', '</td>' ]\n[ 'close', '</tr>' ]\n[ 'text', '\\n  ' ]\n[ 'open', '<tr>' ]\n[ 'open', '<td>' ]\n[ 'text', 'is' ]\n[ 'close', '</td>' ]\n[ 'close', '</tr>' ]\n[ 'text', '\\n' ]\n[ 'close', '</table>' ]\n[ 'text', '\\n' ]\n```\n\n# methods\n\n``` js\nvar tokenize = require('html-tokenize');\n```\n\n## var t = tokenize()\n\nReturn a tokenize transform stream `t` that takes html input and produces rows\nof output. The output rows are of the form:\n\n* `[ name, buffer ]`\n\nThe input stream maps completely onto the buffers from the object stream.\n\nThe types of names are:\n\n* open\n* close\n* text\n\ncdata, comments, and scripts all use `'open'` with their contents appearing in\nsubsequent `'text'` rows.\n\n# usage\n\nThere is an html-tokenize command too.\n\n```\nusage: html-tokenize {FILE}\n\n  Tokenize FILE into newline-separated json arrays for each tag.\n  If FILE is not specified, use stdin.\n\n```\n\n# install\n\nWith [npm](https://npmjs.org), to get the library do:\n\n```\nnpm install html-tokenize\n```\n\nor to get the command do:\n\n```\nnpm install -g html-tokenize\n```\n\n# license\n\nMIT\n",
    "licenseText": "This software is released under the MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/html-tokenize/-/html-tokenize-2.0.1.tgz#c3b2ea6e2837d4f8c06693393e9d2a12c960be5f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/html-tokenize/-/html-tokenize-2.0.1.tgz",
    "hash": "c3b2ea6e2837d4f8c06693393e9d2a12c960be5f",
    "integrity": "sha512-QY6S+hZ0f5m1WT8WffYN+Hg+xm/w5I8XeUcAq/ZYP5wVC8xbKi4Whhru3FtrAebD5EhBW8rmFzkDI6eCAuFe2w==",
    "registry": "npm",
    "packageName": "html-tokenize",
    "cacheIntegrity": "sha512-QY6S+hZ0f5m1WT8WffYN+Hg+xm/w5I8XeUcAq/ZYP5wVC8xbKi4Whhru3FtrAebD5EhBW8rmFzkDI6eCAuFe2w== sha1-w7Lqbig31PjAZpM5Pp0qEslgvl8="
  },
  "registry": "npm",
  "hash": "c3b2ea6e2837d4f8c06693393e9d2a12c960be5f"
}